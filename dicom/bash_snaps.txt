if [ -z "$1" ]
  then
    echo "argument 1 not provided"
    echo "source bash.txt list.txt folderpath studyName regionName side"
    exit 1
fi

if [ -z "$2" ]
  then
    echo "argument 2 not provided"
    echo "source bash.txt list.txt folderpath studyName regionName side"
    exit 1
fi

if [ -z "$3" ]
  then
    echo "argument 3 not provided"
    echo "source bash.txt list.txt folderpath studyName regionName side"
    exit 1
fi

if [ -z "$4" ]
  then
    echo "argument 4 not provided"
    echo "source bash.txt list.txt folderpath studyName regionName side"
    exit 1
fi

if [ -z "$5" ]
  then
    echo "argument 5 not provided"
    echo "source bash.txt list.txt folderpath studyName regionName side"
    exit 1
fi


inputFolder=$2
study=$3
regionName=$4
side=$5

while IFS='' read -r line || [[ -n "$line" ]]; do
n=$(ls $inputFolder/$line/postprocessing/FreeSurfer/6.0/ | grep base | wc -l)
if [ $n -ge 1 ];then
tp="base"
case="$line"_base
for ((k=1; k<=$n; k++))
do
Folder=$inputFolder/"$line"/postprocessing/FreeSurfer/6.0/"$case"/
source Snapshot_bashscript.txt "$line"_"$tp" $Folder $study $regionName $side
freeview -cmd commands_"$line"_"$tp"_"$regionName"_"$side"_axial.txt
freeview -cmd commands_"$line"_"$tp"_"$regionName"_"$side"_sagittal.txt
freeview -cmd commands_"$line"_"$tp"_"$regionName"_"$side"_coronal.txt
case=$(ls $inputFolder/$line/postprocessing/FreeSurfer/6.0/|grep .long. | sed -n "$k"p)
tp=0"$k"
done
fi

### For EPIC cases uncomment next lines
#tp=$(echo $line | cut -c 8-9)
#case=$(echo $line | cut -c 1-6)
#Folder=$inputFolder/"$case"/postprocessing/FreeSurfer/6.0/"$line"/
#source Snapshot_bashscript.txt "$case"_"$tp" $Folder $study $regionName $side
#freeview -cmd commands_"$case"_"$tp"_axial.txt
#freeview -cmd commands_"$case"_"$tp"_sagittal.txt
#freeview -cmd commands_"$case"_"$tp"_coronal.txt
##echo $inputFolder/$line/postprocessing/FreeSurfer/6.0/"$line"* | cut -c 76-96

done < "$1"
